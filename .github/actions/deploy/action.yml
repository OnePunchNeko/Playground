name: "Deploy Azure Stack"
description: "Deploy Azure Stack with configuration"
inputs:
  azureTenantId:
    description: "Azure Tenant ID"
    required: true
  azureClientId:
    description: "Azure Client ID"
    required: true
  azureSubscriptionId:
    description: "Azure Subscription ID"
    required: true
  bicepFilePath:
    description: "Path to the Bicep file"
    required: true
  stackName:
    description: "Name of the stack"
    required: true
  stackResourceGroup:
    description: "Resource group for the stack"
    required: true
  slackWebhookUrl:
    description: "Slack Webhook URL"
    required: true
runs:
  using: "composite"
  steps:
    - name: Notify the Slack Channel Start
      env:
        STACK_NAME: ${{ inputs.stackName }}
        STACK_RESOURCE_GROUP: ${{ inputs.stackResourceGroup }}
        SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookUrl }}
      run: |
        # Example Slack Message Body
        # {
        #   "blocks": [
        #     {
        #       "type": "section",
        #       "text": { "text": "@here Hello World!!", "type": "mrkdwn" }
        #     }
        #   ]
        # }
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"blocks\": [{\"type\": \"section\", \"text\": {\"text\": \"@here ‚ö†Ô∏è Start Deploying Azure Stack *${STACK_NAME}* to *${STACK_RESOURCE_GROUP}* ‚ö†Ô∏è\", \"type\": \"mrkdwn\"}}]}" \
        ${SLACK_WEBHOOK_URL}
      shell: bash

    - name: Bicep Build
      uses: Azure/bicep-build-action@v1.0.1
      with:
        bicepFilePath: ${{ inputs.bicepFilePath }}
        outputFilePath: ${GITHUB_WORKSPACE}/__azure_stack.json

    - name: Login to Azure
      uses: azure/login@v2.2.0
      with:
        tenant-id: ${{ inputs.azureTenantId }}
        client-id: ${{ inputs.azureClientId }}
        subscription-id: ${{ inputs.azureSubscriptionId }}

    - name: Run Azure Deployment script
      uses: azure/cli@v2.1.0
      env:
        STACK_NAME: ${{ inputs.stackName }}
        STACK_RESOURCE_GROUP: ${{ inputs.stackResourceGroup }}
      with:
        azcliversion: latest
        inlineScript: |
          chmod +x ${GITHUB_WORKSPACE}/deploy.sh  
          ${GITHUB_WORKSPACE}/deploy.sh \
          ${GITHUB_WORKSPACE}/__azure_stack.json \
          ${STACK_NAME} \
          ${STACK_RESOURCE_GROUP}

    - name: Notify the Slack Channel Success
      if: ${{ success() }}
      env:
        STACK_NAME: ${{ inputs.stackName }}
        STACK_RESOURCE_GROUP: ${{ inputs.stackResourceGroup }}
        SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookUrl }}
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"blocks\": [{\"type\": \"section\", \"text\": {\"text\":\"@here ‚úÖ Finish Deploying Azure Stack *${STACK_NAME}* to *${STACK_RESOURCE_GROUP}* ü•≥\", \"type\": \"mrkdwn\"}}]}" \
        ${SLACK_WEBHOOK_URL}
      shell: bash

    - name: Notify the Slack Channel Failure
      if: ${{ failure() }}
      env:
        STACK_NAME: ${{ inputs.stackName }}
        STACK_RESOURCE_GROUP: ${{ inputs.stackResourceGroup }}
        SLACK_WEBHOOK_URL: ${{ inputs.slackWebhookUrl }}
      run: |
        curl -X POST -H 'Content-type: application/json' \
        --data "{\"blocks\": [{\"type\": \"section\", \"text\": {\"text\":\"@here ‚ùå Failed Deploying Azure Stack *${STACK_NAME}* to *${STACK_RESOURCE_GROUP}* üò®\", \"type\": \"mrkdwn\"}}]}" \
        ${SLACK_WEBHOOK_URL}
      shell: bash
